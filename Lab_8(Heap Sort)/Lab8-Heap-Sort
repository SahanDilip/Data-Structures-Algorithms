#include <iostream>
using namespace std;
  
// function to heapify the tree
void heapify(int arr[], int n, int root)
{
    int current = root;
   int left = 2*root + 1;
   int right = 2*root + 2;

   if (left < n && arr[current] < arr[left])
   {
      current = left;
   }
   if (right < n && arr[current] < arr[right])
   {
      current = right;
   }
   if (current != root)
   {
      swap(arr[root], arr[current]);
      heapify(arr,n,current);
   }
}
  
// implementing heap sort
void heapSort(int arr[], int n)
{
   for(int i = n/2 -1; i>=0 ; i--)
   {
      heapify(arr,n,i);
   }

   for(int i=n-1; i>=0; i--)
   {
      swap(arr[0],arr[i]);
      heapify(arr,i,0);
   }
}
  
/* print contents of array */
void displayArray(int arr[], int n)
{
   for (int i=0; i<n; ++i)
   cout << arr[i] << " ";
   cout << "\n";
}
  
// main program
int main()
{
   cout<<"Enter the number of elements"<<endl;
   int length;
   cin>>length;
   int heap_arr[length];
   cout << "Enter elements: " << endl;

  //  store input from user to array
  for (int i = 0; i < length; ++i) {
    cin >> heap_arr[i];
  }
   int n = sizeof(heap_arr)/sizeof(heap_arr[0]);
   cout<<"Input array"<<endl;
   displayArray(heap_arr,n);
  
   heapSort(heap_arr, n);
  
   cout << "Sorted array"<<endl;
   displayArray(heap_arr, n);
}
